local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "RoEgine" .. Fluent.Version,
    SubTitle = "by k3wtf",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

do

local itemName = "Gushers"
local store = game:GetService("ReplicatedStorage").Stores.CornerStore
local Event = game:GetService("ReplicatedStorage").Remotes.AttemptShopItemBuy

Tabs.Main:AddButton({
    Title = "Gushers Spawner",
    Description = "Spam buy Gushers 4$",
    Callback = function()
        Event:FireServer(itemName, store)
    end
})

local chatMessage = "/shout RoEngine On Top"
local Event = game:GetService("ReplicatedStorage").ChatResource.SendChat
local spamConnection = nil

local Toggle = Tabs.Main:AddToggle("ChatSpamToggle", {Title = "Chat Spam", Default = false })
    Toggle:OnChanged(function()
        local isSpamming = Options.ChatSpamToggle.Value
        
        if isSpamming then
            -- Start chat spam
            spawn(function()
                while Options.ChatSpamToggle.Value do
                    Event:FireServer(chatMessage)
                    wait(0.1)
                end
            end)
            print("Chat Spam: ON")
        else
            -- Stop chat spam (the while loop will automatically stop when toggle is false)
            print("Chat Spam: OFF")
        end
    end)
    Options.ChatSpamToggle:SetValue(false)

end


-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Fluent:Notify({
    Title = "RoEgine",
    Content = "RoEgine Testing",
    Duration = 10
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
